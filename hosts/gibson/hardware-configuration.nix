# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, system, vars, ... }:
{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot = {
    kernelPackages = pkgs.linuxPackages_zen;
    kernelModules = [ "kvm-amd" "amdgpu" "i2c-dev" "i2c-piix4" "k10temp" ];
    blacklistedKernelModules = [ "ath12k_pci" "ath12k" ];
    kernelParams = [
      "quiet"
      "splash"
      "video=DP-1:2560x1440@144"
      "video=DP-2:1920x1080@144"
      "video=HDMI-A-2:1920x1080@60"
      "acpi_enforce_resources=lax"
      "systemd.log_level=debug"
      "mem_sleep_default=deep"
      "pcie_aspm=off"
      "amdgpu.dpm=1"
      "boot.shell_on_fail"
      "udev.log_priority=3"
      "rd.systemd.show_status=auto"
      ];
    extraModulePackages = with config.boot.kernelPackages; [ ];
    loader = {
      timeout = 0;
      systemd-boot = {
        enable = true;
        configurationLimit = 5;
      };
      efi = {
        canTouchEfiVariables = true;
      };
    };
    initrd = {
      luks = {
        devices = {
          "rootfs" = {
            device = "/dev/disk/by-label/ROOT";
          };
          "swap" = {
            device = "/dev/disk/by-label/SWAP";
            preLVM = true;
            allowDiscards = true;
            keyFile = null;
          };
        };
      };
      systemd = {
        enable = true;
      };
      kernelModules = [ "amdgpu" ];
      availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "sd_mod" ];
      verbose = false;
    };
    resumeDevice = "/dev/disk/by-label/swap";
    plymouth = {
      enable = true;
      theme = "tech_b";
      themePackages = with pkgs; [
        (adi1090x-plymouth-themes.override {
          selected_themes = [ "tech_b" ];
        })
      ];
    };
    consoleLogLevel = 3;

  };

  fileSystems."/" =
    { device = "/dev/disk/by-label/rootfs";
      fsType = "xfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-label/BOOT";
      fsType = "vfat";
    };

  fileSystems."/home/${vars.username}/games" =
    { device = "/dev/disk/by-label/GAMES";
      fsType = "ext4";
    };

  fileSystems."/nix/tmp" =
    { device = "/dev/disk/by-label/nix-build";
      fsType = "xfs";
      options = [ "noatime" "discard" ];
    };

  fileSystems."/tmp/nix-build" =
    { device = "/nix/tmp";
      fsType = "none";
      options = [ "bind" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-label/swap"; } ];

  hardware = {
    enableAllFirmware = true;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.virbr0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "${system}";
}
